{:rename-macros {}, :renames {}, :externs {console {log {}}}, :use-macros {}, :excludes #{}, :name scores.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {product-details {:protocol-inline nil, :meta {:file "/home/user/labs/clojure/katas/scores/src/cljs/scores/views.cljs", :line 4, :column 7, :end-line 4, :end-column 22, :arglists (quote ([{:keys [id name description]}]))}, :name scores.views/product-details, :variadic false, :file "src/cljs/scores/views.cljs", :end-column 22, :method-params ([p__41158]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [id name description]}]))}, product-ratings {:protocol-inline nil, :meta {:file "/home/user/labs/clojure/katas/scores/src/cljs/scores/views.cljs", :line 11, :column 7, :end-line 11, :end-column 22, :arglists (quote ([{:keys [id ratings]}]))}, :name scores.views/product-ratings, :variadic false, :file "src/cljs/scores/views.cljs", :end-column 22, :method-params ([p__41161]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [id ratings]}]))}, product {:protocol-inline nil, :meta {:file "/home/user/labs/clojure/katas/scores/src/cljs/scores/views.cljs", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([]))}, :name scores.views/product, :variadic false, :file "src/cljs/scores/views.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, product-link {:protocol-inline nil, :meta {:file "/home/user/labs/clojure/katas/scores/src/cljs/scores/views.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([product]))}, :name scores.views/product-link, :variadic false, :file "src/cljs/scores/views.cljs", :end-column 19, :method-params ([product]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([product]))}, product-list {:protocol-inline nil, :meta {:file "/home/user/labs/clojure/katas/scores/src/cljs/scores/views.cljs", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([]))}, :name scores.views/product-list, :variadic false, :file "src/cljs/scores/views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/home/user/labs/clojure/katas/scores/src/cljs/scores/views.cljs", :line 48, :column 7, :end-line 48, :end-column 17, :arglists (quote ([]))}, :name scores.views/main-panel, :variadic false, :file "src/cljs/scores/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:description :current-displayed-product :show-product-details :div#product-details :ul :key :button :data-id :float :name :li :list-style-type :width :on-click :style :div :div#product-ratings :id :padding :b :product-list :h2 :br :h3 :ratings :href :a :height :margin}, :order [:id :name :description :div#product-details :h3 :ul :style :list-style-type :margin :padding :li :b :ratings :div#product-ratings :br :button :on-click :current-displayed-product :div :a :href :show-product-details :float :width :height :data-id :key :product-list :h2]}, :doc nil}